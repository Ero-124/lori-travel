{"version":3,"file":"static/js/345.ff6da4af.chunk.js","mappings":"iaAkEA,EA3D2BA,EAAAA,MAAW,SAAAC,GAAkC,IAA/BC,EAASD,EAATC,UAAWC,EAAYF,EAAZE,aAC1CC,GAAaC,EAAAA,EAAAA,KAAbD,SACRE,GAAsCC,EAAAA,EAAAA,YAAUC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAkBlCI,YAAW,WACTD,EAAe,SACjB,GAAG,KAWH,OACEE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIb,IACAc,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBF,SAAA,CAhCrC,WACE,IAAMG,GAAWC,EAAAA,EAAAA,QAAO,MAMxB,OALAC,EAAAA,EAAAA,YAAU,WACJF,GACFA,EAASG,QAAQC,MAErB,GAAG,KAEDT,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAAA,SAAOU,IAAKL,EAAUM,UAAQ,EAACC,MAAI,EAACC,OAAK,EAAAX,UACvCF,EAAAA,EAAAA,KAAA,UAAQc,IAAKC,EAAaC,KAAK,kBAIvC,CAmBSC,IACDd,EAAAA,EAAAA,MAAA,UACEe,QAfc,WACtBnB,YAAW,WACTT,GAAa,GACb6B,eAAeC,QACfD,eAAeE,QAAQ,QAAS,KAChCC,SAASC,KAAKC,MAAMC,UAAY,QAClC,GAAG,IACL,EASUrB,UAAS,aAAAsB,OAAe7B,GAAcK,SAAA,EAEtCF,EAAAA,EAAAA,KAAA,YACAA,EAAAA,EAAAA,KAAA,YACAA,EAAAA,EAAAA,KAAA,YACAA,EAAAA,EAAAA,KAAA,WACC2B,EAAWpC,GAAUqC,YAMlC,G,+CCpDA,IAJoB,WAClB,OAAOC,EAAAA,EAAAA,YAAWC,EAAAA,EACpB,C","sources":["components/IntroVideo/IntroVideo.jsx","hooks/useLanguageContext.jsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport useLanguage from \"../../hooks/useLanguageContext\";\r\nimport introVideo2 from \"./video/videoplayback.webm\";\r\nimport traduction from \"./language.json\";\r\nimport \"./IntroVideo.scss\";\r\n\r\nconst MemoizedIntroVideo = React.memo(({ skipVideo, setSkipVideo }) => {\r\n  const { language } = useLanguage();\r\n  const [activeClass, setActiveClass] = useState();\r\n\r\n  function MyVideoComponent() {\r\n    const videoRef = useRef(null);\r\n    useEffect(() => {\r\n      if (videoRef) {\r\n        videoRef.current.play();\r\n      }\r\n    }, []);\r\n    return (\r\n      <>\r\n        <video ref={videoRef} autoPlay loop muted>\r\n          <source src={introVideo2} type=\"video/webm\" />\r\n        </video>\r\n      </>\r\n    );\r\n  }\r\n\r\n  setTimeout(() => {\r\n    setActiveClass(\"active\");\r\n  }, 5000);\r\n\r\n  const handleSkipVideo = () => {\r\n    setTimeout(() => {\r\n      setSkipVideo(true);\r\n      sessionStorage.clear();\r\n      sessionStorage.setItem(\"video\", \"1\");\r\n      document.body.style.overflowY = \"scroll\";\r\n    }, 100);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!skipVideo && (\r\n        <div className=\"video__wrapper\">\r\n          {MyVideoComponent()}\r\n          <button\r\n            onClick={handleSkipVideo}\r\n            className={`skip__btn ${activeClass}`}\r\n          >\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            {traduction[language].skip}\r\n          </button>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n});\r\n\r\nMemoizedIntroVideo.propTypes = {\r\n  skipVideo: PropTypes.bool,\r\n  setSkipVideo: PropTypes.func,\r\n};\r\n\r\nexport default MemoizedIntroVideo;\r\n","import { useContext } from \"react\";\r\nimport { LanguageContext } from \"../context/contextLang\";\r\n\r\nconst useLanguage = () => {\r\n  return useContext(LanguageContext);\r\n};\r\n\r\nexport default useLanguage;\r\n"],"names":["React","_ref","skipVideo","setSkipVideo","language","useLanguage","_useState","useState","_useState2","_slicedToArray","activeClass","setActiveClass","setTimeout","_jsx","_Fragment","children","_jsxs","className","videoRef","useRef","useEffect","current","play","ref","autoPlay","loop","muted","src","introVideo2","type","MyVideoComponent","onClick","sessionStorage","clear","setItem","document","body","style","overflowY","concat","traduction","skip","useContext","LanguageContext"],"sourceRoot":""}